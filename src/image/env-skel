## For development this can be set to True
# DEBUG=False

## If you are developing locally (with Django not running inside a container), set this to False
# DOCKER=True

## The base URL of the Django site, for local development http://127.0.0.1:8300/
SITE_URL=https://base.uni-ak.ac.at/

## In a production deployment with other base components, this base path should
## be set for image. For local development set this explicitly to an empty string.
# FORCE_SCRIPT_NAME=/image

## The generated OpenAPI 3.0 spec contains the URL and a description to the
## server hosting the API. This is by default created from SITE_URL and FORCE_SCRIPT_NAME
# OPENAPI_SERVER_URL=
# OPENAPI_SERVER_DESCRIPTION=Image+

## The accepted HTTP Host headers, Django will serve. Defaults to urlparse(SITE_URL).hostname
# ALLOWED_HOSTS=

## In a production environment Django will be deployed behind a nginx proxy.
## For local development, set this to False
# BEHIND_PROXY=True

## Set up admin notifications here
# DJANGO_ADMINS=Philipp Mayer <philipp.mayer@uni-ak.ac.at>

## In a production setup you should set up SMTP account to get notifications
# EMAIL_HOST_USER=
# EMAIL_HOST_PASSWORD=
# EMAIL_HOST=
# EMAIL_PORT=
# EMAIL_USE_TLS=
# EMAIL_USE_LOCALTIME=
# EMAIL_SUBJECT_PREFIX=[Image]

## Set up CSRF and CORS settings here. For a local development server you
## might want to set CORS_ALLOW_CREDENTIALS to: True
## CORS_ALLOWED_ORIGINS to: localhost,127.0.0.1
## CORS_EXPOSE_HEADERS to: content-disposition
## and CSRF_TRUSTED_ORIGINS to: localhost,127.0.0.1
# CORS_ALLOW_CREDENTIALS=False
# CORS_ALLOWED_ORIGINS=
# CORS_EXPOSE_HEADERS=
# CSRF_TRUSTED_ORIGINS=

## The base url for the CAS server, e.g. https://your.base.domain/cas/
## default: f'{SITE_URL}cas/'
# CAS_SERVER=

## The URL where the base header can be loaded from (defaults to SITE_URL).
## For local development you might want to point to a prod or staging site here.
# BASE_HEADER_SITE_URL=

## The database port only needs to be changed, if you are running showroom
## locally in combination with e.g. portfolio also running locally. Then at
## least one of the database container ports needs to be mapped to a different
## value. So use whatever you set in your docker-compose.override.yml for
## showroom-postgres or leave the comment to use the default:
# POSTGRES_PORT=5432
## The database password has to be the same as the one set in ../../.env
## (it is only needed here as well if you are not in a fully dockerised setup)
# POSTGRES_PASSWORD=password

## Similar to Postgres we also might need to change the Redis port, if
## the standard port is already in use by another container.
# REDIS_PORT=6379

## Permissions default for autocomplete search, type permissions. Can be True or False
PERMISSIONS_DEFAULT_VIEW=True
PERMISSIONS_DEFAULT_EDIT=False

## How deep the location autocomplete in the Django admin should also search for parent locations
LOCATION_SEARCH_LEVELS=1

## If you want to activate Sentry monitoring, set the following parameters
# SENTRY_DSN=
# SENTRY_ENVIRONMENT=development
# SENTRY_TRACES_SAMPLE_RATE=0.2
# SENTRY_PROFILES_SAMPLE_RATE=0.2
