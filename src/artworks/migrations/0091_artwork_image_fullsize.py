# Generated by Django 4.2.15 on 2024-10-23 10:22
from dataclasses import field

import artworks.models
from django.db import migrations
import functools
import os
import versatileimagefield.fields
from PIL import Image

from artworks.models import get_path_to_original_file


def convert_images_to_jpeg(apps, schema_editor):
    """Populate image_fullsize by converting current images, saved under image_original, to the default JPEG format"""
    Artwork = apps.get_model('artworks', 'Artwork')
    for artwork in Artwork.objects.all():
        image_original_path = artwork.image_original.path
        # check if the path to image_original exists (in case of file mismatch)
        if image_original_path and os.path.exists(image_original_path):
            image = Image.open(image_original_path)
            # extract path of image_fullsize
            fullsize_image_path = get_path_to_original_file(artwork, artwork.image_original.name, field='image_fullsize')

            image_fullsize_field = artwork.image_fullsize
            # create directory for images to be converted in
            fullsize_dir = os.path.dirname(artwork.image_fullsize.storage.path(fullsize_image_path))
            if not os.path.exists(fullsize_dir):
                os.makedirs(fullsize_dir)
            # # convert images to RGB (in case they were saved in a digital copy), then save them in JPEG
            with image_fullsize_field.storage.open(fullsize_image_path, 'wb') as fullsize_image_file:
                image.convert('RGB').save(fullsize_image_file, 'JPEG')
            artwork.image_fullsize.name = fullsize_image_path
            artwork.save()

class Migration(migrations.Migration):

    dependencies = [
        ('artworks', '0090_artwork_search_keywords_artwork_search_locations_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='artwork',
            name='image_fullsize',
            field=versatileimagefield.fields.VersatileImageField(blank=True, max_length=255, null=True, upload_to=functools.partial(artworks.models.get_path_to_original_file, *(), **{'field': 'image_fullsize'}), verbose_name='Fullsize Image'),
        ),
        migrations.RunPython(
            convert_images_to_jpeg,
            reverse_code=migrations.RunPython.noop,
        ),
    ]
